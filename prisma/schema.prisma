generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  name         String     @db.VarChar(255)
  email        String     @unique @db.VarChar(255)
  password     String     @db.VarChar(255)
  profileImage String?    @db.VarChar(255)
  lastAccess   DateTime?
  preferences  Json?
  bio          String?    @db.Text
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  tasks        Task[]
  categories   Category[]

  @@map("users")
}


model Task {
  id           Int      @id @default(autoincrement())
  title        String   @db.VarChar(255)
  description  String   @db.Text
  dueDate      DateTime
  priority     Priority @default(media)
  status       Status   @default(pendente)
  reminder     DateTime // Horário de lembrete
  tags         String   @db.Text // Armazena tags como "tag1,tag2,tag3"
  estimatedTime Int     // Tempo estimado em minutos
  recurrence   String   // Recorrência (ex: "daily", "weekly")
  user_id      Int      
  category_id  Int      
  user         User     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  category     Category @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("tasks") // Define o nome da tabela em minúsculo
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tasks     Task[]
  user_id   Int
  user      User    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("categories") // Define o nome da tabela em minúsculo
}

enum Priority {
  alta
  media
  baixa
}

enum Status {
  pendente
  completa
}